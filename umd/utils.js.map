{"version":3,"file":"utils.js","sources":["../src/utils.js"],"sourcesContent":["function strToCompareArray(str) {\r\n\r\n    return str.split(/\\W+/g).map(c => c.trim().toLowerCase());\r\n\r\n}\r\n\r\nfunction compareStr(a, b) {\r\n\r\n    if (typeof a === 'string') a = strToCompareArray(a);\r\n    if (typeof b === 'string') b = strToCompareArray(b);\r\n\r\n    const matched = [];\r\n    for (let i = 0, l = a.length; i < l; i++) {\r\n\r\n        if (b.includes(a[i])) matched.push(a[i]);\r\n\r\n    }\r\n\r\n\r\n    const unmatchedTokens = a.length - matched.length + b.length - matched.length;\r\n    const score = (matched.length / Math.min(a.length, b.length)) - unmatchedTokens * 0.001;\r\n\r\n    return score;\r\n\r\n}\r\n\r\nfunction findMatch(name, list) {\r\n\r\n    let matches = null;\r\n    let score = -Infinity;\r\n\r\n    const versionMatches = /\\w*\\d\\d\\d+\\w*/.exec(name);\r\n    let versionRegexp = null;\r\n    if (versionMatches) {\r\n        versionRegexp = new RegExp(`(^|\\\\W)${ versionMatches[0] }(\\\\W|$)`, 'i');\r\n    }\r\n\r\n    const gpuArr = strToCompareArray(name);\r\n    for (let i = 0, l = list.length; i < l; i++) {\r\n\r\n        const name = list[i];\r\n        if (versionRegexp && !versionRegexp.test(name)) continue;\r\n        if (!versionRegexp && /\\d\\d\\d+/.test(name)) continue;\r\n\r\n        const similarity = compareStr(name, gpuArr);\r\n        if (similarity > score) {\r\n\r\n            score = similarity;\r\n            matches = [name];\r\n\r\n        } else if (similarity === score) {\r\n\r\n            matches.push(name);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return { matches, score };\r\n\r\n}\r\n\r\nfunction toScoreTable(arr) {\r\n\tlet str = '';\r\n\tstr += `| | ${ arr.join( ' | ' ) } |\\n`;\r\n\tstr += `|---|${ arr.map( () => '---|' ).join( '' ) }\\n`;\r\n\r\n\tarr.forEach(name => {\r\n\t\tlet row = '';\r\n\t\trow += `| **${ name }** |`;\r\n\r\n\t\tarr.forEach(name2 => {\r\n\t\t\tconst info = findMatch(name, [name2]);\r\n\t\t\tif (name === name2) {\r\n\t\t\t\trow += ' - |';\r\n\t\t\t} else if ( info ) {\r\n\t\t\t\trow += ` ${ info.score.toFixed( 4 ) } |`;\r\n\t\t\t} else {\r\n\t\t\t\trow += ' fail |';\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\trow += '\\n';\r\n\t\tstr += row;\r\n\t});\r\n\r\n\treturn str;\r\n}\r\n\r\nexport { findMatch, toScoreTable };\r\n"],"names":["strToCompareArray","str","split","map","c","trim","toLowerCase","compareStr","a","b","matched","i","l","length","includes","push","unmatchedTokens","score","Math","min","findMatch","name","list","matches","Infinity","versionMatches","exec","versionRegexp","RegExp","gpuArr","test","similarity","toScoreTable","arr","join","forEach","row","name2","info","toFixed"],"mappings":"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"}